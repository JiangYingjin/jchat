/* Monaco Editor 样式模块 */

// Monaco Editor 模块化样式 - 全局样式已移至monaco-editor-global.css

// 🎨 模块化样式 - 可在组件中使用的类名

.monaco-status-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 6px 8px;
  background: var(--gray-50);
  border-bottom: 1px solid var(--border-in-light);
  font-size: 11px;
  color: var(--text-color-secondary);
  flex-shrink: 0;

  .monaco-stats {
    display: flex;
    gap: 12px;

    .stat-item {
      display: flex;
      align-items: center;
      gap: 4px;
    }
  }

  .monaco-memory-status {
    display: flex;
    align-items: center;
    gap: 6px;
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 11px;
    font-weight: 500;

    &.normal {
      color: var(--success);
      background: rgba(var(--success-rgb), 0.1);
    }

    &.warning {
      color: var(--warning);
      background: rgba(var(--warning-rgb), 0.1);
    }

    &.critical {
      color: var(--error);
      background: rgba(var(--error-rgb), 0.1);
    }
  }
}

.monaco-editor-wrapper {
  flex: 1 1 auto;
  position: relative;
  overflow: hidden; // 由 Monaco 内部处理滚动，避免父级产生第二个滚动条
  min-height: 0; // 关键：防止在flex布局中撑开导致双滚动条
}

.monaco-loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
  color: var(--text-color-secondary);

  .loading-spinner {
    width: 24px;
    height: 24px;
    border: 2px solid var(--border-in-light);
    border-top: 2px solid var(--primary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
}

// ===== 中键自动滚动覆盖层样式 =====
.auto-scroll-overlay {
  position: fixed;
  transform: translate(-50%, -50%);
  width: 32px;
  height: 32px;
  border-radius: 50%;
  background: color-mix(in srgb, var(--white) 70%, transparent);
  border: 1px solid var(--border-in-light);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.18);
  z-index: 99999;
  pointer-events: none;
  backdrop-filter: saturate(180%) blur(4px);
}

.auto-scroll-cross-v {
  position: absolute;
  left: 50%;
  top: 6%;
  width: 1px;
  height: 88%;
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0) 0%,
    rgba(0, 0, 0, 0.45) 50%,
    rgba(0, 0, 0, 0) 100%
  );
}

.auto-scroll-cross-h {
  position: absolute;
  top: 50%;
  left: 6%;
  height: 1px;
  width: 88%;
  background: linear-gradient(
    to right,
    rgba(0, 0, 0, 0) 0%,
    rgba(0, 0, 0, 0.45) 50%,
    rgba(0, 0, 0, 0) 100%
  );
}

.auto-scroll-center-dot {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: var(--primary);
  transform: translate(-50%, -50%);
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.15);
}

.monaco-error {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  color: var(--error);
  padding: 20px;

  .error-icon {
    font-size: 48px;
    margin-bottom: 12px;
  }

  .error-message {
    font-size: 16px;
    margin-bottom: 8px;
  }

  .error-suggestion {
    font-size: 14px;
    color: var(--text-color-secondary);
  }
}

// 🔧 Monaco Editor 核心样式（从chat.module.scss迁移）
.monaco-editor {
  flex: 1;
  position: relative;
  // Monaco Editor样式将通过独立的全局CSS文件处理
}

// 🖼️ Monaco版本的图像处理样式
.monaco-images-container {
  position: relative;
  padding: 12px;
  background: var(--gray-50);
  border-top: 1px solid var(--border-in-light);
  display: flex;
  gap: 12px;
  overflow-x: auto;
  overflow-y: hidden;
  flex-shrink: 0;

  // 自定义滚动条
  &::-webkit-scrollbar {
    height: 6px;
  }

  &::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.05);
    border-radius: 3px;
  }

  &::-webkit-scrollbar-thumb {
    background: rgba(0, 0, 0, 0.2);
    border-radius: 3px;
    transition: background 0.2s ease;

    &:hover {
      background: rgba(0, 0, 0, 0.4);
    }
  }

  .monaco-image-item {
    position: relative;
    width: 64px;
    height: 64px;
    border-radius: 8px;
    background-size: cover;
    background-position: center;
    cursor: pointer;
    border: 2px solid var(--white);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.2s ease;
    flex-shrink: 0;

    &:hover {
      transform: scale(1.05);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);

      .monaco-image-mask {
        opacity: 1;
      }
    }

    .monaco-image-mask {
      position: absolute;
      top: 4px;
      right: 4px;
      width: 20px;
      height: 20px;
      background: rgba(0, 0, 0, 0.7);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0;
      transition: opacity 0.2s ease;

      &:hover {
        background: rgba(0, 0, 0, 0.9);
      }
    }
  }

  // 空状态提示
  .monaco-images-empty {
    color: var(--text-color-secondary);
    font-size: 14px;
    font-style: italic;
    text-align: center;
    padding: 20px;
  }
}
// 🎨 动画
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

// 🎯 系统提示词 Monaco 编辑器统一容器类
// 合并了 monaco-container、system-prompt-editor 和 chat.module.scss 中的相关样式
.system-prompt-monaco-container {
  // 从 monaco-container 继承的基础样式
  display: flex;
  flex-direction: column;
  height: 100%;
  background: var(--white);
  overflow: hidden;
  position: relative;
  min-height: 350px;
  max-height: 100%; // 让父容器控制高度

  // 从 system-prompt-editor .monaco-container 继承的样式
  border: none; // 在模态框中去掉边框，使用模态框的边框

  // 从 chat.module.scss system-prompt-monaco 继承的样式
  border-radius: 12px;

  &:focus-within {
    border-color: var(--primary);
    box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.1);
  }
}

// 🔧 Monaco Editor 包装器样式（从 chat.module.scss 迁移）
.monaco-wrapper {
  flex: 1 1 auto;
  min-height: 0; // 关键：在flex布局中允许子元素按需收缩，避免高度塌缩
  padding-left: 8px;
  box-sizing: border-box;
  border: 1px solid var(--primary);
  border-radius: 12px;
}

// 📝 系统提示词输入面板样式（从 chat.module.scss 迁移）
.system-prompt-input-panel {
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  height: 100%;
  max-height: 100%;
  min-height: 280px;
  overflow: hidden;
  border-radius: 12px;
  border: 1px solid var(--border-in-light);
  position: relative;
  background-color: var(--white);
  box-shadow: var(--card-shadow);

  &:has(.system-prompt-input:focus) {
    border: 1px solid var(--primary);
  }
}

// 📎 系统提示词输入面板附件样式
.system-prompt-input-panel-attach {
  // 当有附件时，可以添加特殊的样式，比如调整padding
  padding-bottom: 80px; // 为附件区域预留空间
}

// 🖼️ Monaco版本的图片附件样式（从 chat.module.scss 迁移）
.attach-images {
  position: absolute;
  left: 14px;
  bottom: 14px;
  display: flex;
  max-width: calc(100% - 28px);
  overflow-x: auto;
  overflow-y: hidden;
  white-space: nowrap;
  z-index: 1; // 确保图片在文本框之上

  // 美化图片区域的滚动条
  &::-webkit-scrollbar {
    height: 4px;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background: rgba(0, 0, 0, 0.3);
    border-radius: 2px;
  }

  &::-webkit-scrollbar-thumb:hover {
    background: rgba(0, 0, 0, 0.5);
  }
}

// 🗂️ 系统提示词编辑容器样式（从 chat.module.scss 迁移）
.system-prompt-edit-container {
  display: flex;
  flex-direction: column;
  height: 100%;
  max-height: 100%;
  overflow: hidden;
  min-height: 0; // 关键：在flex布局中允许子元素按需收缩，避免高度塌缩
  background: linear-gradient(180deg, rgba(0, 0, 0, 0.02), rgba(0, 0, 0, 0));
  border-radius: 12px;

  // 确保容器有合理的高度限制
  height: 100%;
  max-height: calc(85vh - 150px); // 适应模态框高度，预留头部和按钮空间
  min-height: 380px; // 确保足够的编辑空间
}
